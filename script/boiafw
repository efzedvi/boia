#!/usr/bin/env perl
use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;
use IO::File;
use POSIX qw(strftime);

my $VERSION = '0.01';

my $bsdfw = 'ipfw'; #  can be either ifpw or pf

#	boiafw --prep/-p 		  -c chain/table 
#	boiafw --block/-b <ip/ip-range>   -c chain/table 
#	boiafw --release/-r <ip/ip-range> -c chain/table 
#	boiafw --zap/-z 		  -c [<chain/table>]
#	boiafw --list/-l 		  -c [<chain/table>]
#	boiafw --help/-h --version/-v


my $help_flag;
my $version_flag;
my $dryrun_flag;
my $cmd;
my $chain;
my $ip;

my $res = GetOptions (	"help|?"	=> \$help_flag,
			"version|v"	=> \$version_flag,
			"dryrun|t"	=> \$dryrun_flag,
			"cmd|o=s"	=> \$cmd,
			"chain|c=s"	=> \$chain,
			"ip|i=s"	=> \$ip,
	);

my @cmds = qw/ prepare block release zap list /;
my %cmds = map { $_ => 1; } @cmds;

pod2usage(1) unless $res;
pod2usage(0) if $help_flag;

if ($version_flag) {
	printf("boiafw v%s\n", $VERSION);
	exit;
}

if ($cmd && ! exists $cmds{lc $cmd}) {
	print STDERR "Invalid command '$cmd'\n";
	exit(5);
}

my $os = '';
if ($^O eq 'linux') {
	$os = 'linux';
} elsif ($^O eq 'freebsd') {
	$os = 'freebsd';
} elsif ($^O =~ m/bsd$/i) {
	$os = 'bsd';
} else {
	print STDERR "Unsupported operating system : $^O\n";
	exit(6);
}

my $cmds = {
	freebsd => {
		prepare	=> \&prepare_ipfw,
		block	=> \&block_ipfw,
		release => \&release_ipfw,
		zap	=> \&zap_ipfw,
		list	=> \&list_ipfw,
	},
	bsd 	=> {
		prepare	=> \&prepare_pf,
		block	=> \&block_pf,
		release => \&release_pf,
		zap	=> \&zap_pf,
		list	=> \&list_pf,
	},
	linux 	=> {
		prepare	=> \&prepare_linux,
		block	=> \&block_linux,
		release => \&release_linux,
		zap	=> \&zap_linux,
		list	=> \&list_linux,
	},
};

my $rc = 0;
if ($cmd) {
	$rc = $cmds->{$os}->{$cmd}->();
}

exit $rc;

#-------------------- freebsd/ipfw functions 
sub prepare_ipfw {
	return 0;
}

sub block_ipfw {
	return 0;
}

sub release_ipfw {
	return 0;
}

sub zap_ipfw {
	return 0;
}

sub list_ipfw {
	return 0;
}

#-------------------- bsd/pf functions 

sub prepare_pf {
	return 0;
}

sub block_pf {
	return 0;
}

sub release_pf {
	return 0;
}

sub zap_pf {
	return 0;
}

sub list_pf {
	return 0;
}


#-------------------- linux/iptables functions 

sub prepare_linux {
	return 0;
}

sub block_linux {
	return 0;
}

sub release_linux {
	return 0;
}

sub zap_linux {
	return 0;
}

sub list_linux {
	return 0;
}


__END__

=head1 NAME

boiafw - BOIA's FireWall utility

=head1 SYNOPSIS

boiafw [options] :

Where the options are:

--chain/-c <string>	: Specifies the chain

--ip/-i	   <ip_address>	: IP Address

--cmd/-o <command>	: prepare block release zap list 

--help/-h		: help

--version/-v		: version

=cut

